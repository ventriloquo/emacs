#+TITLE: Minha configuração do Emacs
#+AUTHOR: Tukain
#+STARTUP: overview

Essa configuração tem como foco principal não ter nenhuma
(se não pouquíssima) dependência externa. Ou seja, uma
configuração usando o Emacs mais puro possível.


* Bons padrões

O Emacs é um ótimo programa com padrões horrorosos,
então vamos dar um jeito nisso.

#+begin_src emacs-lisp
(setq backup-directory-alist '(("." . "~/.config/emacs/backups"))
      inhibit-startup-message t
      inhibit-startup-echo-area-message t
      tooltip-use-echo-area t
      custom-file "~/.config/emacs/custom.el")
(load custom-file)
(setq-default minor-mode-alist nil
	      fill-column 80)

(require 'ido)
(ido-mode t)
(ido-everywhere t)
(tooltip-mode -1)
(delete-selection-mode 1)

;; Não mostrar caixas de diálogos usando UI.
(setq use-dialog-box nil)

;; Refrescar todos os buffers quando os arquivos presentes
;; neles forem alterados externamente
(global-auto-revert-mode 1)
(setq global-auto-revert-non-file-buffers t)

(setq warning-minimum-level
      :emergency)
#+end_src

* Org-mode

#+begin_src emacs-lisp
(require 'org-tempo)
(setq org-support-shift-select t
      org-edit-src-content-indentation 0)
(setq-default org-startup-indented t
              org-pretty-entities t
              org-use-sub-superscripts "{}"
              org-hide-emphasis-markers t
              org-startup-with-inline-images t
              org-image-actual-width '(300))
#+end_src

* Aparência

Configurações relacionadas a parte mais estética do Emacs,
apesar de ter algumas coisas que ajudam também na usabilidade.

#+begin_src emacs-lisp
(scroll-bar-mode 0)
(tool-bar-mode 0)
(menu-bar-mode 0)
(add-to-list 'default-frame-alist '(font . "jetbrainsmono-11"))
(global-prettify-symbols-mode)
(global-hl-line-mode t)
(icomplete-mode 1)
;;(display-time-mode 1)
;;(display-battery-mode 1)
(setq-default whitespace-style
    '(face trailing space-mark tab-mark))
(set-frame-parameter nil 'alpha-background 100)
(add-to-list 'default-frame-alist '(alpha-background . 100))
;;(global-whitespace-mode)
;;(global-display-fill-column-indicator-mode t)
#+end_src

** Tema

#+begin_src emacs-lisp
(setq modus-themes-mode-line '(borderless accented 4 1.0))
(setq modus-themes-region '(bg-only))
(setq modus-themes-bold-constructs t
      modus-themes-italic-constructs t
      modus-themes-paren-match '(intense))
(setq modus-themes-headings
      '((1 . (rainbow background 1.5))
	(2 . (rainbow background 1.4))
	(3 . (rainbow background 1.3))
	(4 . (rainbow background 1.2))
	(t . (rainbow background 1.1))))
(setq modus-themes-org-blocks 'tinted-background)
;;(load-theme 'modus-vivendi t)
#+end_src

* Hooks

#+begin_src emacs-lisp
(add-hook 'prog-mode-hook
	  (lambda ()
	    (display-line-numbers-mode t)))
#+end_src
* Pacotes
#+begin_src emacs-lisp
(load-file "~/.config/emacs/etc/hare-mode.el")
#+end_src

#+begin_src emacs-lisp
;; Configurando o MELPA
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)

;; Configurando o use-package
(require 'use-package)
(setq use-package-always-ensure t)

;; TODO: Remover essa linha quando o Emacs 30 virar mainstream.
(use-package which-key
  :config (which-key-mode))

(use-package company
  :config
  (global-company-mode)
  (setq company-idle-delay 0))
(use-package htmlize)
(use-package magit)
(use-package simple-httpd)
(use-package neotree
  :config
  (setq neo-theme (if (display-graphic-p) 'ascii 'arrow))
  (global-set-key (kbd "M-n") 'neotree-toggle))
(use-package telephone-line
  :config (telephone-line-mode))
;; Um pouco de música não faz mal.
(use-package bongo)
(use-package dashboard
  :config
  (setq dashboard-center-content t)
  (setq dashboard-vertically-center-content t)
  (dashboard-open))
#+end_src
** Temas
#+begin_src emacs-lisp
(use-package kanagawa-themes)
(use-package gruvbox-theme)
(use-package gruber-darker-theme)
(use-package catppuccin-theme)
(use-package dracula-theme)

(load-theme 'kanagawa-wave t)
#+end_src
* Teclas de atalho

É claro que eu não iria deixar de adicionar *MAIS* teclas de
atalho para um programa que, dentre outras coisas, é conhecido
por ter uma cacetada de teclas de atalho.

** Find-file-at-point
#+begin_src emacs-lisp
(global-set-key (kbd "C-.") 'ffap)
#+end_src

** Duplicate-line
#+begin_src emacs-lisp
(global-set-key (kbd "C-;") 'duplicate-line)
#+end_src

** Eshell
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> s") 'eshell)
#+end_src

** Whitespace-mode
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> w") 'global-whitespace-mode)
#+end_src

** Número de linhas
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> l") 'global-display-line-numbers-mode)
#+end_src

** Indicador de 80 linhas
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> f") 'global-display-fill-column-indicator-mode)
#+end_src

** IBuffer
#+begin_src emacs-lisp
(global-set-key (kbd "C-x C-b") 'ibuffer)
#+end_src

** Compile
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> c") 'compile)
#+end_src

** Modus-themes-toggle
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> m") 'modus-themes-toggle)
#+end_src

** Bongo controls
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> bb") 'bongo)
(global-set-key (kbd "C-<tab> bn") 'bongo-next)
(global-set-key (kbd "C-<tab> bp") 'bongo-previous)
(global-set-key (kbd "C-<tab> br") 'bongo-play-random)
(global-set-key (kbd "C-<tab> bP") 'bongo-pause/resume)
(global-set-key (kbd "C-<tab> bs") 'bongo-stop)
(global-set-key (kbd "C-<tab> bi") 'bongo-show)
#+end_src

** Reiniciar o Emacs
#+begin_src emacs-lisp
(global-set-key (kbd "C-<tab> r") 'restart-emacs)
#+end_src
